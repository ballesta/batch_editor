<?php

    /**
     * Created by PhpStorm.
     * User: bernard
     * Date: 29/09/2016
     * Time: 16:28
     */

    // Base class of all code generators
    include '../Generators/Code_generator.php';

    class Sixmo_code_generator extends Code_generator
    {

        // Begin, end function called for each entity of model.

        function modele_begin(Modele $modele)
        {
            echo 'Modèle begin ', $modele->nom, '<br>';
        }

        function module_begin(Modele $modele, Module $module)
        {
            echo '--Module begin ', $module->nom, '<br>';

        }

        function has_many_begin(Modele $modele, Module $module, Has_many $has_many)
        {
            echo '----has_many_begin ---- ', $module->nom, '<br>';
            $this->insert_link_to_detail_grid($modele, $module, $has_many);
        }

        // Insert button in list to drill down to detailed list
        function insert_link_to_detail_grid(Modele $modele, Module $module, Has_many $has_many)
        {
            // Get file to update
            $file_path = 'resources\\views' . '\\' . $module->nom . '\\index.blade.php';
            $full_file_path = $this->laravel_project_path . '\\' . $file_path;
            // Save path to wite generated file
            $this->full_file_path = $full_file_path;
            $editor = new Batch_script_editor($full_file_path);

            // Do the changes

            // 1. Enlarge action column to cope with added buttons
            //    ------------------------------------------------
            $editor->find("{{ Lang::get('core.btn_action') }}");
            $action_column_width = $editor->find_regex('/width="([0-9]+)"/');
            $enlarged_column_width = $action_column_width[1] + 130;
            $editor->replace_regexp('/width="([0-9]+)"/','width="' . $enlarged_column_width .'"');

            // 2. Insert link to detail view of current line
            //    ------------------------------------------
            $module_name = $has_many->module_detail->nom;
            $module_title = $has_many->module_detail->title;
            // Prepare button link to details
            $link_to_detail =
            ['{!!',
                '\Navigation::link_to_detail(  '                   ,
                '$text      = ' . "'$module_title',"               ,
                '$help      = ' . "'$has_many->explications',"     ,
                '$url       = ' . "URL::to('$module_name/show/')," ,
                '$parent_key= ' . "'$module->id_key',"             ,
                '$parent_id = ' . '$row->' . $module->id_key .")"  ,
             '!!}'
            ];

            $editor->find('@foreach ($tableGrid as $field)');
            $editor->find('@endforeach');
            $editor->find('<td>');
            $editor->insert($link_to_detail);

            $editor->save();
        }

        function has_many_end(Modele $modele, Module $module, Has_many $has_many)
        {
            echo '----has_many_end ', $module->nom, '<br>';
        }

        function belongs_to_begin(Modele $modele, Module $module, Module $parent)
        {
            echo '----belongs_to_begin ', $module->nom, ' belongs to ', $parent->nom, '<br>';
            $this->insert_parent_filter_in_controller($module, $parent);
        }

        /**
         * Injection of SQL filter on parent id into module controller.
         * Module controler is generated by Sximo but without filter.
         * Run after Sximo rebuild action in module.
         * Called for every module 'belongs to one' parent relation
         * Changes done in module, not in parent
         *
         * @param \Module $module Generate parent filter
         * @param \Module $parent Parent to get parent_id to filter on
         */
        function insert_parent_filter_in_controller(Module $module, Module $parent)
        {
            //echo $this->file_path;
            //$this->inject_source_code_begin($this->file_path);
            // Replace SQL where clause in controller
            $parent_id_key = $parent->id_key;
            $filter =
            [
                '$parent_id_key = ' . "'$parent_id_key';",
                '// Table',
                '$table = with(new static)->table;',
                '// clef primaire de la table',
                '$key = with(new static)->primaryKey;',
                '// Id du parent passée en paramètre?',
                '$id = \Session::get($parent_id_key, null);',
                'if (is_null($id))',
                '{',
                '    // No id,leave existing filter',
                '    $where = "  WHERE $table.$key IS NOT NULL ";',
                '}',
                'else',
                '{',
                '    // Filter by parent id',
                '    $where = "  WHERE $table.$parent_id_key = $id ";',
                '}',
                'return $where; '
            ];

            $file_path = 'app\\Models' . '\\' . $module->nom . '.php';
            $full_file_path = $this->laravel_project_path . '\\' . $file_path;
            echo "<h1>$full_file_path</h1>";
            $this->full_file_path = $full_file_path;
            $editor = new Batch_script_editor($full_file_path);
            //$function_body  = $editor->replace_words(
            //                         [ 'parent_id_key' => $parent_id_key]
            //                         , $filter);
            //file_put_contents('gggg.php', $function_body);

            // Read controller source code for injection of generated code

            // search '	public static function queryWhere(  ){' ... '}'
            $begin = $editor->find('public static function queryWhere(  ){');
            $end = $editor->find('}');
            // Replace function body by generated code
            $editor->replace($begin, $end, $filter);
            //$editor->replace($begin,$end,['aaaaaaa']);
            $editor->save();
        }

        function belongs_to_end(Modele $modele, Module $module, Module $parent)
        {
            echo '----belongs_to_end ', $module->nom, '<br>';
        }

        function module_end(Modele $modele, Module $module)
        {
            echo '--Module end ', $module->nom, '<br>';
        }

        function modele_end(Modele $modele)
        {
            echo 'Modèle end ', $modele->nom, '<br>';
        }
    }